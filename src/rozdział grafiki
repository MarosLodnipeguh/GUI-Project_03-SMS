muszę to zrobić tak, że stworzy się cała uruchomieniowa logika z konstruktora MainLogic
a dopiero potem bazując na kolekjach layerów, będą sie tworzyły layery w grafice


1. new MainLogic
2. new BSCManager
3. new BSCLayer
4. new BSChandlers

grafika:
new MainFrame
new MainPanel
new StationsPanel
5. new BSCLayerUI (BSCManager.BSCLayer[0])
6. BSCLayerUI konstruktor -> update: for each BSChandlers in BSCLayer[0] -> addNewPanel(BSChandlers)


newVBDlogicCreated event
i ten event będzie przekazywał wszystko co potrzebne do stworzenia nowego UI z tego!


v3.0 to będzie stable build
gdzie wszystko już działa ale kod nie jest taki piękny jeszcze
i nie ma pdu :/

mój cel jest taki żeby można było zrobić new MainFrame bez tworzenia MainLogic


jak są 3 warstwy BSChandlers to coś sie pierdoli i 3 wartstwa nie dostaje wiadomości



naprawić logike layerów BSChandlers:
każdy layer ma numer
w BSCManager jest metoda która zwraca numer ostatniego layera
w BSChandlers jeśli layerNumber == BSCManager.getLastLayerNumber() to wysyłam do VRD


logika / grafika:

grafika rysuje tylko tyle elementów ile jest w mapie vbd na przykład
przy użyciu gettera
i przy użyciu getterow bierze wartości do wyświetlenia

grafika bez istnienia logiki ma wyświetlić po prostu puste pole

funkcja
refresh VBD layers
która w pętli odczytuje listę z logiki i dodaje do grafiki to co odczyta

przycisk add wywołuje metodę w logice, która tworzy nowy w logice i wywołuje odświeżenie w grafice

for every VBD in list add VBDpanel(od tych vbd z listy)


rozpisywać sobie wszystko ładnie przez implementacją żebym miał jasne punkty powiedziane..